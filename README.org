* Introduction

2018 basketball project

Use player trajectories to predict player

We use this [[https://docs.google.com/presentation/d/1UUQPWn69poKy3clSZHIpD6xedAG1rGOM1_9YFDfq0PU/edit#slide=id.g42b656bfa3_0_0][Google Slides]] to keep the notes

* Code Structure

We reuse the code genearted for 2017 basketball project. For information on
that, refer to README_2017.org

Instead of focusing on doubleteaming, we record the whole possession: where a
possession is the time from the player getting the ball until ball movement
stops.

The data is contained in ../traj_data ordered by gamecode. To generate this
data, we use ../code/pipeline4.py.

** legacy

Legacy code (eg. definition of possesion) is put into legacy folder

** lib

Contains useful code for current project

* Event Meaning

#+BEGIN_EXAMPLE
event-id="10" event-description="Substitution"
event-id="11" event-description="Timeout"
event-id="12" event-description="Jump Ball"
event-id="15" event-description="End Period"
#+END_EXAMPLE

For more search in NBA_FINALPBP_EXP\$2016020610.XML

* Running process note

0: team_defense_closeness (done)
3: player_poss_count (done)
4: player_frames_count (done)
5: traj_length_dist (done)
6: end_event_dist (done)

* Design Choice

ignore pbp_seq_num: don't use play by play definition of possession to mark
previous event; Use my definition instead.
